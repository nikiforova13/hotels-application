version: '3.0'
services:
  db:
    image: postgres:15
    container_name: hotels_db
    ports:
      - 5455:5455
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db-dev-hotels-app

  redis:
    image: redis:7
    container_name: hotels_redis

  hotels_app:
    build:
      context: .
    container_name: dev_hotels_app
    env_file:
      - app/.env
    depends_on:
      - db
      - redis
    command: >
      sh -c "make run && make migrate"
    ports:
      - 8000:8080
    environment:
      DB_HOST: localhost
      DB_PORT: 5455
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: db-dev-hotels-app


  celery:
    build:
      context: .
    container_name: hotels_celery
    depends_on:
      - redis
      - hotels_app
    command: >
      sh -c "poetry run celery --app=app.tasks_celery.celery_config:celery_app worker -l INFO"
    env_file:
      - app/.env


  flower:
    build:
      context: .
    container_name: hotels_flower
    depends_on:
      - redis
      - hotels_app
    command: >
      sh -c "poetry run celery --app=app.tasks_celery.celery_config:celery_app flower"
    env_file:
      - app/.env

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
#    volumes:
#      - grafanadata:/var/lib/grafana

    restart: unless-stopped
    ports:
      - 3000:3000





